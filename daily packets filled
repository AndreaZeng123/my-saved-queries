-- Sum of packets by crop, by date

-- Set constants
WITH declares AS (
  SELECT
    DATE '2024-01-01' AS start_date,
    ARRAY<STRING> ['WIB', 'HAZ', 'CRM'] AS sites,
    2024 AS target_planting_year,
    ARRAY<STRING> ['CARMAN-CANOLA-PACKAGING', 'NORLA-BREEDING-CORN-NURSERY-PACKAGING', 'VEG-RD-INVENTORY-STEWARDS-NAM-PAYETTE', 'WILLIAMSBURG-SEED-OPS-PACKAGE'] AS fulfillment_group,
    ARRAY<STRING> ['Corn', 'Cotton', 'Wheat', 'Soybean', 'Soybeans', 'Canola', 'OSR-Canola'] AS crops,
    ARRAY<STRING> ['Canola', 'OSR-Canola', 'Wheat'] AS non_mactracker_crops
),

-- all dates
date_range AS (
  SELECT DATE AS day
  FROM UNNEST(GENERATE_DATE_ARRAY(DATE '2024-01-01', DATE '2024-12-30', INTERVAL 1 DAY)) AS date
),

-- get all NSP/YTP packets
all_packets AS (
  SELECT EXTRACT(DATE FROM datetime_child_scan) AS date, 
        batch_packet_barcode AS packetBarcode,
        machine_location AS site,
        record_id
  FROM `bcs-breeding-datasets.breeding_operations.mactracker_nsp` AS mactracker_nsp
  WHERE mactracker_nsp.machine_location IN (SELECT sites FROM declares, UNNEST(sites) AS sites)
  AND mactracker_nsp.batch_source_barcode <> 'TOTALIZER'
  AND REGEXP_CONTAINS(batch_packet_barcode, r'^P0|^\d')
  AND EXTRACT(DATE FROM mactracker_nsp.datetime_source_scan) >= (SELECT start_date FROM declares)

  UNION ALL

  SELECT EXTRACT(DATE FROM datetime_child_scan) AS date, 
        batch_packet_barcode AS packetBarcode,
        machine_location AS site,
        record_id
  FROM `bcs-breeding-datasets.breeding_operations.mactracker_ytp` AS mactracker_ytp
  WHERE mactracker_ytp.machine_location IN (SELECT sites FROM declares, UNNEST(sites) AS sites)
  AND mactracker_ytp.batch_source_barcode <> 'TOTALIZER'
  AND REGEXP_CONTAINS(batch_packet_barcode, r'^P0|^\d')
  AND EXTRACT(DATE FROM mactracker_ytp.datetime_source_scan) >= (SELECT start_date FROM declares)
),
  
-- velocity connection
velocity_packets AS (
  WITH vpackets AS (
    SELECT date, packetBarcode, site, entryIds
    FROM `bcs-csw-core.velocity.packet` AS p
    CROSS JOIN UNNEST(p.entryIds) AS entryIds
    INNER JOIN (SELECT date, CAST(packetBarcode AS INT64) AS packetBarcode, site
                FROM all_packets
                WHERE REGEXP_CONTAINS(packetBarcode, r'^\d')) USING (packetBarcode)
  )

  SELECT vpackets.date, COUNT(vpackets.packetBarcode) AS n_packets, cr.crops AS crop, vpackets.site
  FROM vpackets
  LEFT JOIN (
  SELECT entryid, capacity_request_id
  FROM `bcs-breeding-datasets.velocity.experiment_sets_entries` 
  ) ese
  ON vpackets.entryIds = ese.entryid
  LEFT JOIN (
    SELECT capacity_request_id, crops --could get material stage, etc. from here
    FROM `bcs-breeding-datasets.velocity.capacity_request`
    WHERE planting_year = (SELECT target_planting_year FROM declares)
  ) cr
  ON ese.capacity_request_id = cr.capacity_request_id
  GROUP BY vpackets.date, cr.crops, vpackets.site
),

-- FTS connection
fts_packets AS (
  SELECT date, 
        COUNT(DISTINCT(record_id)) as n_packets, 
        ops_experiment_entries.crop, 
        site 
  FROM all_packets
  INNER JOIN (
    SELECT plot_barcode, planting_year, crop
      FROM `bcs-breeding-datasets.breeding_pipeline.ops_experiment_entries`
      WHERE crop IN (SELECT crops FROM declares, UNNEST(crops) AS crops)
      AND planting_year = (SELECT target_planting_year FROM declares)
  ) AS ops_experiment_entries
  ON all_packets.packetBarcode = ops_experiment_entries.plot_barcode
  GROUP BY date, crop, site
),

-- get wheat and canola data (not counted on NSP/YTP)
nonmac_packets AS (
  WITH vpackets AS (
    SELECT packetBarcode, date, entryIds, 
    CASE
      WHEN fulfillmentGroupId = 'CARMAN-CANOLA-PACKAGING' THEN 'CRM'
      ELSE 'WIB' END AS site
    FROM (
      SELECT packetBarcode, DATE(filledDate) AS date, entryIds, packagingPlanId
      FROM `bcs-csw-core.velocity.packet` AS p
      CROSS JOIN UNNEST(p.entryIds) AS entryIds
    ) packet 
    INNER JOIN `bcs-csw-core.velocity.packaging_plan` pplan 
    ON pplan.id = packet.packagingPlanId
    WHERE pplan.fulfillmentGroupId IN (SELECT fulfillment_group FROM declares, UNNEST(fulfillment_group) AS fulfillment_group)
    AND date >= (SELECT start_date FROM declares)
  )

  SELECT vpackets.date, COUNT(vpackets.packetBarcode) AS n_packets, 
    CASE 
      WHEN crops = 'OSR-Canola' THEN 'Canola'
      ELSE crops END AS crop, 
  vpackets.site
  FROM vpackets
  LEFT JOIN (
  SELECT entryid, capacity_request_id
  FROM `bcs-breeding-datasets.velocity.experiment_sets_entries` 
  ) ese
  ON vpackets.entryIds = ese.entryid
  LEFT JOIN (
    SELECT capacity_request_id, crops 
    FROM `bcs-breeding-datasets.velocity.capacity_request`
    WHERE planting_year = (SELECT target_planting_year FROM declares)
    AND crops IN (SELECT non_mactracker_crops FROM declares, UNNEST(non_mactracker_crops) AS non_mactracker_crops)
  ) cr
  ON ese.capacity_request_id = cr.capacity_request_id
  GROUP BY vpackets.date, cr.crops, vpackets.site
),

-- merge the three packet sources together
merged AS (
  SELECT * FROM velocity_packets

  UNION ALL

  SELECT * FROM fts_packets

  UNION ALL

  SELECT * FROM nonmac_packets
),

-- get the count of packets by group
counted_packets AS (
  SELECT date_range.day, site,
      CASE WHEN (SUM(n_packets) IS NULL) THEN 0 
          ELSE SUM(n_packets) END AS counted
  FROM date_range
  LEFT JOIN merged
    ON date_range.day = merged.date
  WHERE crop IS NOT NULL
  GROUP BY date_range.day,  site
)

-- add running totals
SELECT *, SUM(counted) OVER (
    PARTITION BY  site
    ORDER BY day
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
  ) AS total_counted
FROM counted_packets
WHERE site = 'HAZ'
ORDER BY day, site;

-- -- add running totals
-- SELECT day,site, SUM(counted) OVER (
--     PARTITION BY site
--     ORDER BY day
--     ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
--   ) AS total_counted
-- FROM counted_packets
-- WHERE site = 'HAZ'
-- ORDER BY day, site
